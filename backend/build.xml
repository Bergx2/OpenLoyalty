<project name="OLOY" basedir="." default="none">
    <property name="workspace" value="${basedir}" />
    <property name="sourcedir" value="${basedir}/src" />
    <property name="disable_deprecations" value="export SYMFONY_DEPRECATIONS_HELPER=disabled" />

    <target name="none">
        <echo>By default I do nothing! Add -l to see all available tasks</echo>
    </target>
    <target name="migrate" description="Migrate database schema">
        <property name="env" value="prod" />
        <exec command="bin/console doctrine:schema:update --env=${env} -n --force" checkreturn="true" passthru="true"/>
        <exec command="bin/console oloy:user:projections:index:create --drop-old -n --env=${env}" checkreturn="true" passthru="true"/>
        <exec command="bin/console oloy:utility:read-models:recreate --force --env=${env}" checkreturn="true" passthru="true"/>
    </target>

    <target name="drop-broadway-stores">
        <exec command="bin/console broadway:event-store:schema:drop -n" checkreturn="true" passthru="true"/>
        <exec command="bin/console broadway:event-store:schema:init -n" checkreturn="true" passthru="true"/>
        <exec command="bin/console broadway:snapshoting:schema:drop -n" checkreturn="true" passthru="true"/>
        <exec command="bin/console broadway:snapshoting:schema:init -n" checkreturn="true" passthru="true"/>
    </target>

    <target name="prepare-for-tests">
        <property name="env" value="test" />
        <property name="fixtures" value="" />

        <exec command="bin/console oloy:user:projections:index:create --drop-old -n --env=${env}" checkreturn="true" passthru="true"/>
        <exec command="bin/console doctrine:schema:update --env=${env} -n --force" checkreturn="true" passthru="true"/>
        <phingcall target="drop-broadway-stores" />
        <exec command="bin/console doctrine:fixtures:load --env=${env} -n ${fixtures}" checkreturn="true" passthru="true"/>
        <exec command="bin/console oloy:segment:recreate -vv" checkreturn="true" passthru="true"/>
    </target>
    <target name="ci-setup-test" description="Setup everything and test (for CI)" depends="generate-jwt-keys,prepare-for-tests">
        <!--<exec command="bin/console security:check &#45;&#45;env=test" checkreturn="true" passthru="true"/>-->
        <exec command="bin/console doctrine:schema:validate --env=test --skip-sync" checkreturn="true" passthru="true"/>
        <exec command="${disable_deprecations};vendor/phpunit/phpunit/phpunit vendor/divante-ltd/open-loyalty-framework/" checkreturn="true" passthru="true"/>
    </target>
    <target name="setup" description="Setup everything and load test data" depends="generate-jwt-keys">
        <phingcall target="prepare-for-tests">
            <property name="env" value="prod" />
        </phingcall>
    </target>
    <target name="basic-setup" description="Setup everything and load only required data" depends="generate-jwt-keys">
        <phingcall target="prepare-for-tests">
            <property name="env" value="prod" />
            <property name="fixtures" value="--fixtures=vendor/divante-ltd/open-loyalty-framework/src/OpenLoyalty/Bundle/SettingsBundle/DataFixtures/ORM/LoadSettingsData.php --fixtures=vendor/divante-ltd/open-loyalty-framework/src/OpenLoyalty/Bundle/UserBundle/DataFixtures/ORM/LoadRoleData.php --fixtures=vendor/divante-ltd/open-loyalty-framework/src/OpenLoyalty/Bundle/EmailSettingsBundle/DataFixtures/ORM/LoadEmailsData.php --fixtures=vendor/divante-ltd/open-loyalty-framework/src/OpenLoyalty/Bundle/UserBundle/DataFixtures/ORM/LoadAdminData.php" />
        </phingcall>
    </target>
    <target name="phpstan" description="Run phpstan to check code">
        <exec command="bin/console cache:clear --env=test" checkreturn="true" passthru="true"/>
        <exec command="var/bin/phpstan analyse -l 1 src" checkreturn="true" passthru="true"/>
    </target>
    <target name="fix-code" description="Fix code">
        <exec command="var/bin/php-cs-fixer fix --verbose --show-progress=estimating --rules=@Symfony,-yoda_style,-single_blank_line_before_namespace,compact_nullable_typehint src" checkreturn="true" passthru="true"/>
    </target>
    <target name="test" description="Setup everything and run some tests">
        <echo>
            phing test -Dsrc=src/OpenLoyalty/Bundle/TransactionBundle/Tests/Controller/Api/TransactionControllerTest.php -Dno-build
        </echo>
        <property name="src" value="" />
        <if>
            <isset property="no-build" />
            <else>
                <phingcall target="prepare-for-tests" />
            </else>
        </if>
        <exec command="${disable_deprecations};var/bin/phpunit ${src} -v" checkreturn="true" passthru="true"/>
    </target>
    <target name="unit" description="Run unit tests">
        <exec command="${disable_deprecations};var/bin/phpunit --testsuite Unit" checkreturn="true" passthru="true"/>
    </target>
    <target name="test-security" description="Setup everything and run tests">
        <exec command="bin/console oloy:user:projections:index:create --drop-old -n --env=test" checkreturn="true" passthru="true"/>
        <phingcall target="drop-broadway-stores" />
        <exec command="bin/console doctrine:fixtures:load -n --env=test" checkreturn="true" passthru="true"/>
        <exec command="${disable_deprecations};var/bin/phpunit --testsuite Security" checkreturn="true" passthru="true"/>
    </target>
    <target name="test-domain" description="Setup everything and run tests">
        <exec command="${disable_deprecations};var/bin/phpunit --testsuite Domain" checkreturn="true" passthru="true"/>
    </target>

    <target name="test-component" description="Setup everything and run tests">
        <exec command="${disable_deprecations};var/bin/phpunit --testsuite Component" checkreturn="true" passthru="true"/>
    </target>

    <target name="demo" description="Setup for demo purposes" depends="generate-jwt-keys">
        <exec command="bin/console oloy:user:projections:index:create --drop-old -n" checkreturn="true" passthru="true"/>
        <exec command="bin/console doctrine:schema:update --force" checkreturn="true" passthru="true"/>
        <phingcall target="drop-broadway-stores" />
        <exec command="bin/console doctrine:fixtures:load --fixtures src/OpenLoyalty/Bundle/DemoBundle/_DataFixtures/ORM/ -n" checkreturn="true" passthru="true"/>
        <exec command="bin/console oloy:segment:recreate -vv" checkreturn="true" passthru="true"/>
    </target>

    <target name="generate-jwt-keys" description="Generate new JWT keys if needed">
        <if>
            <not>
                <or>
                    <available file="app/var/jwt/private.pem" type="file"/>
                    <available file="app/var/jwt/public.pem" type="file"/>
                </or>
            </not>
            <then>
                <mkdir dir="app/var/jwt"/>
                <exec command="openssl genrsa -out app/var/jwt/private.pem 4096" checkreturn="true" passthru="true"/>
                <exec command="openssl rsa -pubout -in app/var/jwt/private.pem -out app/var/jwt/public.pem" checkreturn="true" passthru="true"/>
            </then>
            <else>
                <echo>JWT tokens already exist in app/var/jwt/!</echo>
            </else>
        </if>
    </target>
    <target name="migrate_2.10_to_3.0" description="Migrate application from 2.10 to 3.0">
        <property name="env" value="prod" />
        <exec command="bin/console oloy:translation:upgrade_to_3 --force --env=${env}" checkreturn="true" passthru="true"/>
        <exec command="bin/console doctrine:schema:update --force --env=${env}" checkreturn="true" passthru="true"/>
        <exec command="bin/console oloy:translation:migrate2database english.json en --force --setAsDefault --env=${env}" checkreturn="true" passthru="true"/>
        <exec command="bin/console oloy:translation:migrate2database polish.json pl --force --env=${env}" checkreturn="true" passthru="true"/>
        <phingcall target="migrate">
            <property name="env" value="${env}" />
        </phingcall>
    </target>
</project>
